trigger:
- develop
- release/*
  
pool:
  vmImage: windows-latest
  demands:
    - msbuild
    - visualstudio

variables:
- name: buildConfiguration
  value: 'Release'
- name: buildPlatform
  value: 'Any CPU'
- name: buildPlatformForProjectFile
  value: 'AnyCPU'

resources:
  repositories:
  - repository: inss-devops-common-lib
    type: github
    endpoint: InsolvencyService
    name: InsolvencyService/inss-devops-common-lib
    ref: develop

stages:
- stage: BuildTest
  displayName: 'Build and Test'
  jobs:  
      # Build .net projects
    - job: BuildNetProject
      steps:
      - task: NuGetCommand@2
        displayName: NuGet Restore (INSS.ODS.Worldpay) 
        inputs:
          command: 'restore'
          restoreSolution: '**/INSS.ODS.Worldpay.sln'
          feedsToUse: 'select'
          vstsFeed: '55aed121-b2ec-4f93-be0c-66c47a84fc23/9759cc91-0c79-4700-9db6-cd44445e3b36'

      - task: VSBuild@1
        displayName: Build Solution (MockWorldpay)
        inputs:
          solution: '**/Insolvency.CommonServices.MockWorldpay/Insolvency.CommonServices.MockWorldpay.csproj'
          msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(Build.StagingDirectory)"'
          platform: '$(buildPlatformForProjectFile)'
          configuration: '$(buildConfiguration)'
          maximumCpuCount: true
      
      - task: VSTest@2
        displayName: Execute Tests
        inputs:
          testSelector: 'testAssemblies'
          testAssemblyVer2: |
            **\*test*.dll
            !**\*TestAdapter.dll
            !**\obj\**
          searchFolder: '$(System.DefaultWorkingDirectory)'
          codeCoverageEnabled: true
          platform: '$(buildPlatform)'
          configuration: '$(buildConfiguration)'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish Artifact (MockWorldpay)'
        inputs:
          targetPath: '$(Build.StagingDirectory)\Insolvency.CommonServices.MockWorldpay.zip'
          artifact: 'Insolvency.CommonServices.MockWorldpay'
          publishLocation: 'pipeline'
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- stage: DeployDev
  displayName: 'Deploy to Dev'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: Worldpay-Dev
  jobs:
    - template: deploy-jobs-template.yml
      parameters:
        environment: 'Dev'
        appInsightsConnectionString: $(AppInsightsConnectionString)
#        merchantCode: $(MerchantCode)
#        worldpayPaymentServiceUrl: $(WorldpayPaymentServiceUrl)
        
## - stage: DeploySIT
##   displayName: 'Deploy to SIT'
##   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
##   variables:
##     - group: Worldpay-SIT
##   jobs:
##     - template: deploy-jobs-template.yml
##       parameters:
##         environment: 'SIT'
##         merchantCode: $(MerchantCode)
##         worldpayPaymentServiceUrl: $(WorldpayPaymentServiceUrl)
##         appInsightsConnectionString: $(AppInsightsConnectionString)
## 
## - stage: DeployPreProd
##   displayName: 'Deploy to PreProd'
##   condition: and(succeeded(), contains(variables['build.sourceBranch'], 'refs/heads/release/'))
##   variables:
##     - group: Worldpay-PreProd
##   jobs:
##     - template: deploy-jobs-template.yml
##       parameters:
##         environment: 'PreProd'
##         merchantCode: $(MerchantCode)
##         worldpayPaymentServiceUrl: $(WorldpayPaymentServiceUrl)
##         appInsightsConnectionString: $(AppInsightsConnectionString)
## 
## - stage: DeployProd
##   displayName: 'Deploy to Prod'
##   condition: and(succeeded(), contains(variables['build.sourceBranch'], 'refs/heads/release/'))
##   variables:
##     - group: Worldpay-Prod
##   jobs:
##     - template: deploy-jobs-template.yml
##       parameters:
##         environment: 'Prod'
##         azureSubscription: 'AppServicesDevOps-Prod'
##         merchantCode: $(MerchantCode)
##         worldpayPaymentServiceUrl: $(WorldpayPaymentServiceUrl)
##         appInsightsConnectionString: $(AppInsightsConnectionString)
